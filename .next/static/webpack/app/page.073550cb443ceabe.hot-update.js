"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./hooks/useGameState.ts":
/*!*******************************!*\
  !*** ./hooks/useGameState.ts ***!
  \*******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useGameState: () => (/* binding */ useGameState)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_firebase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/firebase */ \"(app-pages-browser)/./lib/firebase.ts\");\n/* harmony import */ var _lib_game_logic__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/game-logic */ \"(app-pages-browser)/./lib/game-logic.ts\");\n/* harmony import */ var _lib_telegram__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/telegram */ \"(app-pages-browser)/./lib/telegram.ts\");\n/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/lib/utils */ \"(app-pages-browser)/./lib/utils.ts\");\n/* __next_internal_client_entry_do_not_use__ useGameState auto */ \n\n\n\n\nconst defaultUserData = {\n    id: \"\",\n    firstName: \"User\",\n    lastName: \"\",\n    avatarUrl: \"\",\n    balance: 0,\n    ucBalance: 0,\n    energyLimit: 500,\n    multiTapValue: 1,\n    rechargingSpeed: 1,\n    tapBotPurchased: false,\n    tapBotActive: false,\n    bonusClaimed: false,\n    pubgId: \"\",\n    totalTaps: 0,\n    totalEarned: 0,\n    lastJackpotTime: 0,\n    referredBy: \"\",\n    referralCount: 0,\n    level: 1,\n    xp: 0,\n    streak: 0,\n    combo: 0,\n    lastTapTime: 0,\n    // Mining specific\n    isMining: false,\n    miningStartTime: 0,\n    lastClaimTime: 0,\n    pendingRewards: 0,\n    miningRate: _lib_game_logic__WEBPACK_IMPORTED_MODULE_2__.GAME_CONFIG.BASE_MINING_RATE,\n    minClaimTime: _lib_game_logic__WEBPACK_IMPORTED_MODULE_2__.GAME_CONFIG.MIN_CLAIM_TIME,\n    settings: {\n        sound: true,\n        vibration: true,\n        notifications: true\n    },\n    boosts: {\n        miningSpeedLevel: 1,\n        claimTimeLevel: 1,\n        miningRateLevel: 1\n    },\n    missions: {},\n    withdrawals: [],\n    conversions: [],\n    joinedAt: Date.now(),\n    lastActive: Date.now(),\n    isReturningUser: false,\n    dataInitialized: false,\n    authKey: \"\"\n};\nconst useGameState = ()=>{\n    const [user, setUser] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(defaultUserData);\n    const [gameState, setGameState] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n        isPlaying: false,\n        soundEnabled: true,\n        vibrationEnabled: true,\n        dataLoaded: false,\n        saveInProgress: false,\n        lastSaveTime: 0\n    });\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true);\n    // Define the actual save function\n    const performSave = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useGameState.useCallback[performSave]\": async ()=>{\n            if (!user.id || !user.authKey) return;\n            setGameState({\n                \"useGameState.useCallback[performSave]\": (prev)=>({\n                        ...prev,\n                        saveInProgress: true\n                    })\n            }[\"useGameState.useCallback[performSave]\"]);\n            try {\n                await _lib_firebase__WEBPACK_IMPORTED_MODULE_1__.firebaseService.saveUser(user.id, user);\n                setGameState({\n                    \"useGameState.useCallback[performSave]\": (prev)=>({\n                            ...prev,\n                            lastSaveTime: Date.now()\n                        })\n                }[\"useGameState.useCallback[performSave]\"]);\n            } catch (error) {\n                console.error(\"Failed to save user data:\", error);\n            } finally{\n                setGameState({\n                    \"useGameState.useCallback[performSave]\": (prev)=>({\n                            ...prev,\n                            saveInProgress: false\n                        })\n                }[\"useGameState.useCallback[performSave]\"]);\n            }\n        }\n    }[\"useGameState.useCallback[performSave]\"], [\n        user\n    ]);\n    // Create a debounced version of the save function\n    const debouncedSaveUserData = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((0,_lib_utils__WEBPACK_IMPORTED_MODULE_4__.debounce)(performSave, 500), [\n        performSave\n    ]);\n    // Initialize user and game\n    const initializeGame = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useGameState.useCallback[initializeGame]\": async ()=>{\n            try {\n                var _telegramUser_id;\n                _lib_telegram__WEBPACK_IMPORTED_MODULE_3__.telegram.init();\n                const telegramUser = _lib_telegram__WEBPACK_IMPORTED_MODULE_3__.telegram.getUser();\n                const userId = (0,_lib_utils__WEBPACK_IMPORTED_MODULE_4__.getUrlParameter)(\"id\") || (telegramUser === null || telegramUser === void 0 ? void 0 : (_telegramUser_id = telegramUser.id) === null || _telegramUser_id === void 0 ? void 0 : _telegramUser_id.toString()) || \"user123\";\n                const authKey = (0,_lib_utils__WEBPACK_IMPORTED_MODULE_4__.getUrlParameter)(\"authKey\");\n                // For development, use a default authKey if not provided\n                const finalAuthKey = authKey || \"default_auth_key_for_dev\";\n                // Validate authentication\n                const authResult = await _lib_firebase__WEBPACK_IMPORTED_MODULE_1__.firebaseService.validateAuth(userId, finalAuthKey);\n                if (!authResult.valid && !authResult.isNewUser) {\n                    // For development, create new user with default auth\n                    const newUser = {\n                        ...defaultUserData,\n                        id: userId,\n                        authKey: finalAuthKey,\n                        firstName: (telegramUser === null || telegramUser === void 0 ? void 0 : telegramUser.first_name) || (0,_lib_utils__WEBPACK_IMPORTED_MODULE_4__.getUrlParameter)(\"first_name\") || \"User\",\n                        lastName: (telegramUser === null || telegramUser === void 0 ? void 0 : telegramUser.last_name) || (0,_lib_utils__WEBPACK_IMPORTED_MODULE_4__.getUrlParameter)(\"last_name\") || \"\",\n                        avatarUrl: \"\",\n                        isReturningUser: false\n                    };\n                    await _lib_firebase__WEBPACK_IMPORTED_MODULE_1__.firebaseService.saveUser(userId, newUser);\n                    setUser(newUser);\n                    setGameState({\n                        \"useGameState.useCallback[initializeGame]\": (prev)=>({\n                                ...prev,\n                                dataLoaded: true\n                            })\n                    }[\"useGameState.useCallback[initializeGame]\"]);\n                    setLoading(false);\n                    return;\n                }\n                if (authResult.valid && authResult.userData) {\n                    // Existing user with valid auth\n                    const existingUser = {\n                        ...defaultUserData,\n                        ...authResult.userData,\n                        id: userId,\n                        isReturningUser: true\n                    };\n                    // Calculate offline mining rewards if user was mining\n                    if (existingUser.isMining && existingUser.miningStartTime) {\n                        const now = Date.now();\n                        const offlineDuration = Math.floor((now - existingUser.miningStartTime) / 1000);\n                        const limitedDuration = Math.min(offlineDuration, _lib_game_logic__WEBPACK_IMPORTED_MODULE_2__.GAME_CONFIG.MAX_MINING_TIME);\n                        if (limitedDuration > 0) {\n                            const { earned } = _lib_game_logic__WEBPACK_IMPORTED_MODULE_2__.gameLogic.calculateMiningRewards(existingUser, limitedDuration);\n                            existingUser.pendingRewards = earned;\n                        }\n                    }\n                    setUser(existingUser);\n                } else {\n                    // New user - create account\n                    const newUser = {\n                        ...defaultUserData,\n                        id: userId,\n                        authKey: finalAuthKey,\n                        firstName: (telegramUser === null || telegramUser === void 0 ? void 0 : telegramUser.first_name) || (0,_lib_utils__WEBPACK_IMPORTED_MODULE_4__.getUrlParameter)(\"first_name\") || \"User\",\n                        lastName: (telegramUser === null || telegramUser === void 0 ? void 0 : telegramUser.last_name) || (0,_lib_utils__WEBPACK_IMPORTED_MODULE_4__.getUrlParameter)(\"last_name\") || \"\",\n                        avatarUrl: \"\",\n                        isReturningUser: false\n                    };\n                    // Handle referral for new users only\n                    const refId = (0,_lib_utils__WEBPACK_IMPORTED_MODULE_4__.parseReferralFromUrl)();\n                    const refAuth = (0,_lib_utils__WEBPACK_IMPORTED_MODULE_4__.parseRefAuthFromUrl)();\n                    if (refId && refId !== userId) {\n                        // Validate referrer's authKey\n                        const referrerAuth = await _lib_firebase__WEBPACK_IMPORTED_MODULE_1__.firebaseService.validateAuth(refId, refAuth || \"default_auth_key_for_dev\");\n                        if (referrerAuth.valid) {\n                            newUser.referredBy = refId;\n                            await _lib_firebase__WEBPACK_IMPORTED_MODULE_1__.firebaseService.processReferral(refId, userId, newUser);\n                        }\n                    }\n                    await _lib_firebase__WEBPACK_IMPORTED_MODULE_1__.firebaseService.saveUser(userId, newUser);\n                    setUser(newUser);\n                }\n                setGameState({\n                    \"useGameState.useCallback[initializeGame]\": (prev)=>({\n                            ...prev,\n                            dataLoaded: true\n                        })\n                }[\"useGameState.useCallback[initializeGame]\"]);\n                setLoading(false);\n            } catch (error) {\n                console.error(\"Failed to initialize game:\", error);\n            // Stay in loading state on error\n            }\n        }\n    }[\"useGameState.useCallback[initializeGame]\"], []);\n    // Start mining\n    const startMining = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useGameState.useCallback[startMining]\": ()=>{\n            if (user.isMining) return {\n                success: false,\n                message: \"Already mining!\"\n            };\n            const now = Date.now();\n            const updatedUser = {\n                ...user,\n                isMining: true,\n                miningStartTime: now,\n                pendingRewards: 0\n            };\n            setUser(updatedUser);\n            debouncedSaveUserData();\n            _lib_telegram__WEBPACK_IMPORTED_MODULE_3__.telegram.hapticFeedback(\"success\");\n            return {\n                success: true,\n                message: \"Mining started!\"\n            };\n        }\n    }[\"useGameState.useCallback[startMining]\"], [\n        user,\n        debouncedSaveUserData\n    ]);\n    // Claim mining rewards\n    const claimMiningRewards = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useGameState.useCallback[claimMiningRewards]\": ()=>{\n            if (!_lib_game_logic__WEBPACK_IMPORTED_MODULE_2__.gameLogic.canClaimMining(user)) {\n                _lib_telegram__WEBPACK_IMPORTED_MODULE_3__.telegram.hapticFeedback(\"error\");\n                return {\n                    success: false,\n                    message: \"Mining time not reached!\"\n                };\n            }\n            const duration = _lib_game_logic__WEBPACK_IMPORTED_MODULE_2__.gameLogic.getMiningDuration(user);\n            const { earned, type, xp } = _lib_game_logic__WEBPACK_IMPORTED_MODULE_2__.gameLogic.calculateMiningRewards(user, duration);\n            const updatedUser = {\n                ...user,\n                balance: user.balance + earned,\n                totalEarned: user.totalEarned + earned,\n                isMining: false,\n                miningStartTime: 0,\n                pendingRewards: 0,\n                lastClaimTime: Date.now(),\n                xp: user.xp + xp\n            };\n            setUser(updatedUser);\n            debouncedSaveUserData();\n            _lib_telegram__WEBPACK_IMPORTED_MODULE_3__.telegram.hapticFeedback(\"success\");\n            return {\n                success: true,\n                earned,\n                type,\n                message: \"Claimed \".concat(_lib_game_logic__WEBPACK_IMPORTED_MODULE_2__.gameLogic.formatNumber(earned), \" DRX!\")\n            };\n        }\n    }[\"useGameState.useCallback[claimMiningRewards]\"], [\n        user,\n        debouncedSaveUserData\n    ]);\n    // Upgrade functions\n    const upgradeBoost = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useGameState.useCallback[upgradeBoost]\": async (boostType)=>{\n            const currentLevel = user.boosts[\"\".concat(boostType, \"Level\")];\n            const cost = _lib_game_logic__WEBPACK_IMPORTED_MODULE_2__.gameLogic.getBoostCost(boostType, currentLevel);\n            if (user.balance < cost) {\n                _lib_telegram__WEBPACK_IMPORTED_MODULE_3__.telegram.hapticFeedback(\"error\");\n                return {\n                    success: false,\n                    message: \"Need \".concat(_lib_game_logic__WEBPACK_IMPORTED_MODULE_2__.gameLogic.formatNumber(cost), \" DRX\")\n                };\n            }\n            const updates = {\n                balance: user.balance - cost,\n                boosts: {\n                    ...user.boosts,\n                    [\"\".concat(boostType, \"Level\")]: currentLevel + 1\n                }\n            };\n            // Calculate new mining rate and claim time based on all boosts\n            const newMiningSpeedLevel = boostType === \"miningSpeed\" ? currentLevel + 1 : user.boosts.miningSpeedLevel;\n            const newClaimTimeLevel = boostType === \"claimTime\" ? currentLevel + 1 : user.boosts.claimTimeLevel;\n            const newMiningRateLevel = boostType === \"miningRate\" ? currentLevel + 1 : user.boosts.miningRateLevel;\n            // Update mining rate with combined boosts\n            const miningRateMultiplier = Math.pow(_lib_game_logic__WEBPACK_IMPORTED_MODULE_2__.GAME_CONFIG.MINING_RATE_MULTIPLIER, newMiningRateLevel - 1);\n            const miningSpeedMultiplier = Math.pow(_lib_game_logic__WEBPACK_IMPORTED_MODULE_2__.GAME_CONFIG.MINING_SPEED_MULTIPLIER, newMiningSpeedLevel - 1);\n            updates.miningRate = _lib_game_logic__WEBPACK_IMPORTED_MODULE_2__.GAME_CONFIG.BASE_MINING_RATE * miningRateMultiplier * miningSpeedMultiplier;\n            // Update claim time\n            updates.minClaimTime = Math.max(300, _lib_game_logic__WEBPACK_IMPORTED_MODULE_2__.GAME_CONFIG.MIN_CLAIM_TIME - _lib_game_logic__WEBPACK_IMPORTED_MODULE_2__.GAME_CONFIG.CLAIM_TIME_REDUCTION * (newClaimTimeLevel - 1));\n            const updatedUser = {\n                ...user,\n                ...updates\n            };\n            setUser(updatedUser);\n            await _lib_firebase__WEBPACK_IMPORTED_MODULE_1__.firebaseService.saveUser(updatedUser.id, updatedUser);\n            _lib_telegram__WEBPACK_IMPORTED_MODULE_3__.telegram.hapticFeedback(\"success\");\n            return {\n                success: true,\n                message: \"\".concat(boostType, \" upgraded!\")\n            };\n        }\n    }[\"useGameState.useCallback[upgradeBoost]\"], [\n        user\n    ]);\n    // Claim welcome bonus\n    const claimWelcomeBonus = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useGameState.useCallback[claimWelcomeBonus]\": async ()=>{\n            if (user.bonusClaimed) return {\n                success: false,\n                message: \"Already claimed\"\n            };\n            const updatedUser = {\n                ...user,\n                balance: user.balance + _lib_game_logic__WEBPACK_IMPORTED_MODULE_2__.GAME_CONFIG.WELCOME_BONUS,\n                totalEarned: user.totalEarned + _lib_game_logic__WEBPACK_IMPORTED_MODULE_2__.GAME_CONFIG.WELCOME_BONUS,\n                bonusClaimed: true,\n                dataInitialized: true\n            };\n            setUser(updatedUser);\n            await _lib_firebase__WEBPACK_IMPORTED_MODULE_1__.firebaseService.saveUser(updatedUser.id, updatedUser);\n            _lib_telegram__WEBPACK_IMPORTED_MODULE_3__.telegram.hapticFeedback(\"success\");\n            return {\n                success: true,\n                message: \"Claimed \".concat(_lib_game_logic__WEBPACK_IMPORTED_MODULE_2__.GAME_CONFIG.WELCOME_BONUS, \" DRX!\")\n            };\n        }\n    }[\"useGameState.useCallback[claimWelcomeBonus]\"], [\n        user\n    ]);\n    // Mining interval effect\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useGameState.useEffect\": ()=>{\n        // No real-time interval needed - mining works offline\n        // Rewards are calculated based on time difference when user returns\n        }\n    }[\"useGameState.useEffect\"], [\n        user.isMining,\n        gameState.dataLoaded\n    ]);\n    // Initialize on mount\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useGameState.useEffect\": ()=>{\n            initializeGame();\n        }\n    }[\"useGameState.useEffect\"], [\n        initializeGame\n    ]);\n    return {\n        user,\n        gameState,\n        loading,\n        startMining,\n        claimMiningRewards,\n        upgradeBoost,\n        claimWelcomeBonus,\n        saveUserData: debouncedSaveUserData,\n        setUser\n    };\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./hooks/useGameState.ts\n"));

/***/ })

});